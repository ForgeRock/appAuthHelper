"use strict";(function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b})()({1:[function(a,b){(function(){"use strict";b.exports=function(a){return this.appAuthConfig=a,this.failedRequestQueue=this.failedRequestQueue||{},this},b.exports.prototype={waitForRenewedToken:function waitForRenewedToken(a){var b=this;return new Promise(function(c,d){b.failedRequestQueue[a]||(b.failedRequestQueue[a]=[]),b.failedRequestQueue[a].push([c,d])})},retryFailedRequests:function retryFailedRequests(a){if(this.failedRequestQueue&&this.failedRequestQueue[a])for(var b=this.failedRequestQueue[a].shift();b;)b[0](),b=this.failedRequestQueue[a].shift()},getResourceServerFromUrl:function getResourceServerFromUrl(a){return"object"==typeof this.appAuthConfig.resourceServers&&Object.keys(this.appAuthConfig.resourceServers).length?Object.keys(this.appAuthConfig.resourceServers).filter(function(b){return 0===a.indexOf(b)})[0]:void 0},fetchTokensFromIndexedDB:function fetchTokensFromIndexedDB(){return new Promise(function(a,b){var c,d=indexedDB.open("appAuth"),e=function(){return d.result.createObjectStore(this.appAuthConfig.clientId)}.bind(this);c=function(){if(!d.result.objectStoreNames.contains(this.appAuthConfig.clientId)){var f=d.result.version;return f++,d.result.close(),d=indexedDB.open("appAuth",f),d.onupgradeneeded=e,void(d.onsuccess=c)}var g=d.result.transaction([this.appAuthConfig.clientId],"readonly").objectStore(this.appAuthConfig.clientId).get("tokens");g.onsuccess=function(){var b=g.result;d.result.close(),a(b)}.bind(this),g.onerror=b}.bind(this),d.onupgradeneeded=e,d.onsuccess=c,d.onerror=b}.bind(this))},addAccessTokenToRequest:function addAccessTokenToRequest(a,b){var c=this;return new Promise(function(d,e){c.fetchTokensFromIndexedDB().then(function(f){f[b]?c.addAuthorizationRequestHeader(d,a,f[b]):(c.waitForRenewedToken(b).then(function(){c.addAccessTokenToRequest(a,b).then(d,e)},e),c.renewTokens(b))},e)})},interceptRequest:function interceptRequest(a,b){var c=this;return new Promise(function(d,e){c.addAccessTokenToRequest(a,b).then(function(a){return c.makeRequest(a)}).then(function(d){if("invalid_token"===c.getAuthHeaderDetails(d).error){var e=c.waitForRenewedToken(b).then(function(){return c.addAccessTokenToRequest(a,b)}).then(function(a){return c.makeRequest(a)});return c.renewTokens(b),e}return d}).then(d,e)})},renewTokens:function renewTokens(){},addAuthorizationRequestHeader:function addAuthorizationRequestHeader(){},getAuthHeaderDetails:function getAuthHeaderDetails(){},makeRequest:function makeRequest(){}}})()},{}],2:[function(a,b){(function(){"use strict";var c=a("./IdentityProxyCore"),d=function(a,b){return this.messageChannel=b,c.call(this,a)};d.prototype=Object.create(c.prototype),d.prototype.renewTokens=function(a){this.messageChannel.postMessage({message:"renewTokens",resourceServer:a})},d.prototype.addAuthorizationRequestHeader=function(a,b,c){var d=new Headers(b.headers);d.set("Authorization","Bearer ".concat(c)),b.clone().text().then(function(c){return a(new Request(b.url,{method:b.method,headers:d,body:-1===["GET","HEAD"].indexOf(b.method.toUpperCase())&&c.length?c:void 0,mode:b.mode,credentials:b.credentials,cache:b.cache,redirect:b.redirect,referrer:b.referrer,integrity:b.integrity}))})},d.prototype.getAuthHeaderDetails=function(a){var b=a.headers.get("www-authenticate");return!a.ok&&b&&b.match(/^Bearer /)?b.replace(/^Bearer /,"").match(/[^,=]+=".*?"/g).reduce(function(a,b){var c=b.split("=");return a[c[0]]=c[1].replace(/"(.*)"/,"$1"),a},{}):{}},d.prototype.makeRequest=function(a){return fetch(a)},b.exports=d})()},{"./IdentityProxyCore":1}],3:[function(a){(function(){"use strict";var b=a("./IdentityProxyServiceWorker");self.addEventListener("install",function(a){a.waitUntil(self.skipWaiting())}),self.addEventListener("activate",function(a){a.waitUntil(self.clients.claim())}),self.addEventListener("message",function(a){"configuration"===a.data.message?(self.identityProxy=new b(a.data.config,a.ports[0]),a.waitUntil(self.clients.claim().then(function(){return a.ports[0].postMessage({message:"configured"})}))):"tokensRenewed"===a.data.message&&self.identityProxy.retryFailedRequests(a.data.resourceServer)}),self.addEventListener("fetch",function(a){if(self.identityProxy){var b=self.identityProxy.getResourceServerFromUrl(a.request.url);b&&a.respondWith(self.identityProxy.interceptRequest(a.request,b))}})})()},{"./IdentityProxyServiceWorker":2}]},{},[3]);
