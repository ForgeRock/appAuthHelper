/*

License for AppAuth-JS (Apache 2.0) :
Copyright (c) 2019 The OpenID Foundation

License for AppAuthHelper (Apache 2.0) :
Copyright (c) 2019 ForgeRock, Inc.

*/
"use strict";(function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,b.AppAuthHelper=a()}})(function(){return function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b}()({1:[function(a,b){(function(){"use strict";b.exports={init:function(a){var b,c=document.createElement("a"),d=document.createElement("a");return localStorage.removeItem("currentResourceServer"),this.appAuthIframe=document.createElement("iframe"),this.rsIframe=document.createElement("iframe"),this.renewCooldownPeriod=a.renewCooldownPeriod||1,this.appAuthConfig={appLocation:document.location.href},this.tokensAvailableHandler=a.tokensAvailableHandler,this.interactionRequiredHandler=a.interactionRequiredHandler,this.appAuthConfig.oidc="undefined"==typeof a.oidc||!!a.oidc,this.appAuthConfig.renewStrategy=a.renewStrategy||"authCode",this.pendingResourceServerRenewals=[],this.identityProxyPreference=a.identityProxyPreference||"serviceWorker",c.href=a.redirectUri?a.redirectUri:"appAuthHelperRedirect.html",this.appAuthConfig.redirectUri=c.href,this.iframeOrigin=new URL(this.appAuthConfig.redirectUri).origin,d.href=a.serviceWorkerUri?a.serviceWorkerUri:"appAuthServiceWorker.js",this.appAuthConfig.serviceWorkerUri=d.href,this.appAuthConfig.extras=a.extras||{},this.appAuthConfig.resourceServers=a.resourceServers||{},this.appAuthConfig.clientId=a.clientId,this.appAuthConfig.scopes=Object.keys(this.appAuthConfig.resourceServers).reduce(function(a,b){return a.concat(this.appAuthConfig.resourceServers[b].split(" ").filter(function(b){return-1===a.indexOf(b)}))}.bind(this),this.appAuthConfig.oidc?["openid"]:[]).join(" "),this.appAuthConfig.endpoints={authorization_endpoint:a.authorizationEndpoint,token_endpoint:a.tokenEndpoint,revocation_endpoint:a.revocationEndpoint,end_session_endpoint:a.endSessionEndpoint},window.addEventListener("message",function(a){if(a.origin===this.iframeOrigin)switch(a.data.message){case"appAuth-tokensAvailable":var b=localStorage.getItem("originalWindowHash-"+this.appAuthConfig.clientId);null!==b&&(window.location.hash=b,localStorage.removeItem("originalWindowHash-"+this.appAuthConfig.clientId)),a.data.resourceServer?(localStorage.removeItem("currentResourceServer"),this.renewTokenTimestamp=!1,this.pendingResourceServerRenewals.length&&this.pendingResourceServerRenewals.shift()(),this.identityProxy.tokensRenewed(a.data.resourceServer)):this.registerIdentityProxy().then(function(){return this.tokensAvailableHandler(a.data.idTokenClaims)}.bind(this));break;case"appAuth-interactionRequired":this.interactionRequiredHandler?this.interactionRequiredHandler(a.data.authorizationUrl,a.data.error):(window.location.hash.replace("#","").length&&localStorage.setItem("originalWindowHash-"+this.appAuthConfig.clientId,window.location.hash),window.location.href=a.data.authorizationUrl);break;case"appAuth-logoutComplete":this.logoutComplete();}}.bind(this),!1),this.appAuthIframe.setAttribute("src",this.appAuthConfig.redirectUri),this.appAuthIframe.setAttribute("id","AppAuthIframe"),this.appAuthIframe.setAttribute("style","display:none"),this.rsIframe.setAttribute("src",this.appAuthConfig.redirectUri),this.rsIframe.setAttribute("id","rsIframe"),this.rsIframe.setAttribute("style","display:none"),this.identityProxyMessageChannel=new MessageChannel,this.identityProxyMessageChannel.port1.onmessage=this.handleIdentityProxyMessage.bind(this),b=Promise.all([new Promise(function(a){this.rsIframe.onload=function(){this.rsIframe.onload=null,a()}.bind(this)}.bind(this)),new Promise(function(a){this.appAuthIframe.onload=function(){this.appAuthIframe.onload=null;var b=new MessageChannel;b.port1.onmessage=a,this.appAuthIframe.contentWindow.postMessage({message:"appAuth-config",config:this.appAuthConfig},this.iframeOrigin,[b.port2])}.bind(this)}.bind(this))]),document.getElementsByTagName("body")[0].appendChild(this.appAuthIframe),document.getElementsByTagName("body")[0].appendChild(this.rsIframe),b},handleIdentityProxyMessage:function(a){switch(a.data.message){case"makeRSRequest":this.rsIframe.contentWindow.postMessage({request:a.data.request,message:a.data.message,config:this.appAuthConfig},this.iframeOrigin,a.ports);break;case"renewTokens":this.renewTokens(a.data.resourceServer);}},getTokens:function(){this.appAuthIframe.contentWindow.postMessage({message:"appAuth-getAvailableData",config:this.appAuthConfig},this.iframeOrigin)},logout:function(){return new Promise(function(a){this.logoutComplete=a,this.appAuthIframe.contentWindow.postMessage({message:"appAuth-logout",config:this.appAuthConfig},this.iframeOrigin)}.bind(this))},whenRenewTokenFrameAvailable:function(a){return new Promise(function(b){var c=localStorage.getItem("currentResourceServer");null===c&&(localStorage.setItem("currentResourceServer",a),c=a),a===c?b():this.pendingResourceServerRenewals.push(b)}.bind(this))},renewTokens:function(a){this.whenRenewTokenFrameAvailable(a).then(function(){var b=new Date().getTime();localStorage.setItem("currentResourceServer",a),(!this.renewTokenTimestamp||this.renewTokenTimestamp+1e3*this.renewCooldownPeriod<b)&&(this.renewTokenTimestamp=b,this.appAuthIframe.contentWindow.postMessage({message:"appAuth-getFreshAccessToken",config:this.appAuthConfig,resourceServer:a},this.iframeOrigin))}.bind(this))},registerIdentityProxy:function(){return new Promise(function(a){if("serviceWorker"===this.identityProxyPreference&&"serviceWorker"in navigator){var b,c,d=function(){var c=navigator.serviceWorker.register(this.appAuthConfig.serviceWorkerUri);return c.then(function(c){b=c,navigator.serviceWorker.ready.then(function(){this.identityProxyMessageChannel.port1.onmessage=function(b){a(),this.handleIdentityProxyMessage.call(this,b)}.bind(this),c.active.postMessage({message:"configuration",resourceServers:Object.keys(this.appAuthConfig.resourceServers)},[this.identityProxyMessageChannel.port2])}.bind(this))}.bind(this)),c}.bind(this);d().then(function(){this.identityProxy={tokensRenewed:function(a){navigator.serviceWorker.controller.postMessage({message:"tokensRenewed",resourceServer:a})}},c=setInterval(function(){b&&b.active?b.active.postMessage({message:"keepAlive"}):d().catch(function(){this.registerXHRProxy(),console.warn("Service worker failure, switching to XHR identity proxy"),clearInterval(c)}.bind(this))}.bind(this),1e3)}.bind(this)).catch(function(){this.registerXHRProxy(),c&&clearInterval(c),a()}.bind(this))}else this.registerXHRProxy(),a()}.bind(this))},registerXHRProxy:function(){if("undefined"!=typeof IdentityProxyXHR)this.identityProxy=new IdentityProxyXHR(Object.keys(this.appAuthConfig.resourceServers),this.identityProxyMessageChannel.port2);else throw"Browser incompatible with this build of AppAuthHelper. Use the legacy 'compatible' build instead."}}})()},{}]},{},[1])(1)});
