/*

License for AppAuth-JS (Apache 2.0) :
Copyright (c) 2019 The OpenID Foundation

License for AppAuthHelper (Apache 2.0) :
Copyright (c) 2019 ForgeRock, Inc.

*/
"use strict";(function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,b.AppAuthHelper=a()}})(function(){return function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b}()({1:[function(a,b){(function(){"use strict";var a,c={},d="Primary";b.exports={init:function(a){const b=a.authId||d;c[b]={};var e,f=document.createElement("a"),g=document.createElement("a");return localStorage.removeItem("currentResourceServer"),c[b].appAuthIframe=document.createElement("iframe"),c[b].rsIframe=document.createElement("iframe"),c[b].renewCooldownPeriod=a.renewCooldownPeriod||1,c[b].appAuthConfig={appLocation:document.location.href.replace(/#?&loggedin=true$/,""),appHostname:new URL(a.authorizationEndpoint).hostname,authId:b},c[b].tokensAvailableHandler=a.tokensAvailableHandler,c[b].interactionRequiredHandler=a.interactionRequiredHandler,c[b].appAuthConfig.oidc="undefined"==typeof a.oidc||!!a.oidc,c[b].appAuthConfig.renewStrategy=a.renewStrategy||"authCode",c[b].pendingResourceServerRenewals=[],c[b].identityProxyPreference=a.identityProxyPreference||"serviceWorker",f.href=a.redirectUri?a.redirectUri:"appAuthHelperRedirect.html",c[b].appAuthConfig.redirectUri=f.href,c[b].iframeOrigin=new URL(c[b].appAuthConfig.redirectUri).origin,g.href=a.serviceWorkerUri?a.serviceWorkerUri:"appAuthServiceWorker.js",c[b].appAuthConfig.serviceWorkerUri=g.href,c[b].appAuthConfig.extras=a.extras||{},c[b].appAuthConfig.resourceServers=a.resourceServers||{},c[b].appAuthConfig.clientId=a.clientId,c[b].appAuthConfig.scopes=Object.keys(c[b].appAuthConfig.resourceServers).reduce(function(a,d){return a.concat(c[b].appAuthConfig.resourceServers[d].split(" ").filter(function(b){return-1===a.indexOf(b)}))}.bind(this),c[b].appAuthConfig.oidc?["openid"]:[]).join(" "),c[b].appAuthConfig.endpoints={authorization_endpoint:a.authorizationEndpoint,token_endpoint:a.tokenEndpoint,revocation_endpoint:a.revocationEndpoint,end_session_endpoint:a.endSessionEndpoint},window.removeEventListener("message",this.windowListener,!1),window.addEventListener("message",this.windowListener,!1),c[b].appAuthIframe.setAttribute("src",c[b].appAuthConfig.redirectUri),c[b].appAuthIframe.setAttribute("id",`AppAuthIframe-${b}`),c[b].appAuthIframe.setAttribute("style","display:none"),c[b].rsIframe.setAttribute("src",c[b].appAuthConfig.redirectUri),c[b].rsIframe.setAttribute("id",`rsIframe-${b}`),c[b].rsIframe.setAttribute("style","display:none"),c[b].identityProxyMessageChannel=new MessageChannel,c[b].identityProxyMessageChannel.port1.onmessage=this.handleIdentityProxyMessage.bind(c[b]),e=Promise.all([new Promise(function(a){c[b].rsIframe.onload=function(){c[b].rsIframe.onload=null,a()}.bind(c[b])}.bind(c[b])),new Promise(function(a){c[b].appAuthIframe.onload=function(){c[b].appAuthIframe.onload=null;var d=new MessageChannel;d.port1.onmessage=a,c[b].appAuthIframe.contentWindow.postMessage({message:"appAuth-config",config:this.appAuthConfig},c[b].iframeOrigin,[d.port2])}.bind(c[b])}.bind(c[b]))]),document.getElementsByTagName("body")[0].appendChild(c[b].appAuthIframe),document.getElementsByTagName("body")[0].appendChild(c[b].rsIframe),c[b].registerIdentityProxy=this.registerIdentityProxy,c[b].registerXHRProxy=this.registerXHRProxy.bind(this),c[b].renewTokens=this.renewTokens.bind(c[b]),c[b].whenRenewTokenFrameAvailable=this.whenRenewTokenFrameAvailable.bind(c[b]),c[b].logout=this.logout,e},windowListener:function(b){let e=b.data&&b.data.authId?b.data.authId:d;if(c[e]&&b.origin===c[e].iframeOrigin)switch(b.data.message){case"appAuth-tokensAvailable":if(b.data.resourceServer)localStorage.removeItem("currentResourceServer"),c[e].renewTokenTimestamp=!1,c[e].pendingResourceServerRenewals.length&&c[e].pendingResourceServerRenewals.shift()(),a.tokensRenewed(b.data.resourceServer);else{var f=localStorage.getItem("originalWindowHash-"+e),g=!!window.location.hash.match(/&loggedin=true$/);null===f||""===f||"#"===f?history.replaceState(void 0,void 0,window.location.href.replace(/#&loggedin=true$/,"")):history.replaceState(void 0,void 0,"#"+f.replace("#","")),localStorage.removeItem("originalWindowHash-"+e),c[e].registerIdentityProxy(e).then(function(){return c[e].tokensAvailableHandler(b.data.idTokenClaims,b.data.idToken,g)}.bind(c[e]))}break;case"appAuth-interactionRequired":c[e].interactionRequiredHandler?c[e].interactionRequiredHandler(b.data.authorizationUrl,b.data.error):(localStorage.setItem("originalWindowHash-"+e,window.location.hash),window.location.href=b.data.authorizationUrl);break;case"appAuth-logoutComplete":c[e].logoutComplete();}},handleIdentityProxyMessage:function(a){switch(a.data.message){case"makeRSRequest":this.rsIframe.contentWindow.postMessage({request:a.data.request,message:a.data.message,config:this.appAuthConfig},this.iframeOrigin,a.ports);break;case"renewTokens":this.renewTokens(a.data.resourceServer);}},getTokens:function(a){(a||[d]).forEach(function(a){c[a].appAuthIframe.contentWindow.postMessage({message:"appAuth-getAvailableData",config:c[a].appAuthConfig},c[a].iframeOrigin)})},logout:function(b,e){function f(e){return b=b||{},b.revoke_tokens=!1!==b.revoke_tokens,b.end_session=!1!==b.end_session,new Promise(function(f){c[e].logoutComplete=e===d?f:()=>{a.removeProxyCore(c[e].appAuthConfig.appHostname),delete c[e],document.getElementById(`AppAuthIframe-${e}`).remove(),document.getElementById(`rsIframe-${e}`).remove(),f()},c[e].appAuthIframe.contentWindow.postMessage({message:"appAuth-logout",config:c[e].appAuthConfig,options:b},c[e].iframeOrigin)}.bind(this))}var g=e||Object.keys(c).filter(a=>a!==d);return Promise.all(g.map(f.bind(this))).then(function(){if(e===void 0||e[0]===d)return f(d)})},whenRenewTokenFrameAvailable:function(a){return new Promise(function(b){var c=localStorage.getItem("currentResourceServer");null===c&&(localStorage.setItem("currentResourceServer",a),c=a),a===c?b():this.pendingResourceServerRenewals.push(b)}.bind(this))},renewTokens:function(a){this.whenRenewTokenFrameAvailable(a).then(function(){var b=new Date().getTime();localStorage.setItem("currentResourceServer",a),(!this.renewTokenTimestamp||this.renewTokenTimestamp+1e3*this.renewCooldownPeriod<b)&&(this.renewTokenTimestamp=b,this.appAuthIframe.contentWindow.postMessage({message:"appAuth-getFreshAccessToken",config:this.appAuthConfig,resourceServer:a},this.iframeOrigin))}.bind(this))},registerIdentityProxy:function(b){return new Promise(function(c){if("serviceWorker"===this.identityProxyPreference&&"serviceWorker"in navigator){var d,e,f=function(){var a=navigator.serviceWorker.register(this.appAuthConfig.serviceWorkerUri);return a.then(function(a){d=a,navigator.serviceWorker.ready.then(function(){this.identityProxyMessageChannel.port1.onmessage=function(a){c(),this.handleIdentityProxyMessage.call(this,a)}.bind(this),a.active.postMessage({message:"configuration",resourceServers:Object.keys(this.appAuthConfig.resourceServers)},[this.identityProxyMessageChannel.port2])}.bind(this))}.bind(this)),a}.bind(this);f().then(function(){a={tokensRenewed:function(a){navigator.serviceWorker.controller.postMessage({message:"tokensRenewed",resourceServer:a})}},e=setInterval(function(){d&&d.active?d.active.postMessage({message:"keepAlive"}):f().catch(function(){this.registerXHRProxy(),console.warn("Service worker failure, switching to XHR identity proxy"),clearInterval(e)}.bind(this))}.bind(this),1e3)}.bind(this)).catch(function(){this.registerXHRProxy(),e&&clearInterval(e),c()}.bind(this))}else this.registerXHRProxy(b),c()}.bind(this))},registerXHRProxy:function(b){if("undefined"!=typeof IdentityProxyXHR)a?a.addProxyCore(Object.keys(c[b].appAuthConfig.resourceServers),c[b].identityProxyMessageChannel.port2,c[b].appAuthConfig.appHostname):a=new IdentityProxyXHR(Object.keys(c[b].appAuthConfig.resourceServers),c[b].identityProxyMessageChannel.port2,c[b].appAuthConfig.appHostname);else throw"Browser incompatible with this build of AppAuthHelper. Use the legacy 'compatible' build instead."}}})()},{}]},{},[1])(1)});
